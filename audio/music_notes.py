from resources.resource_manager import (
    ResourceManager,
    SoundResources,
    Resources,
)  # Adjust the import path as necessary
from pygame.mixer import Sound
from typing import cast
from enum import Enum


class MusicNote(Enum):
    A = 0
    B = 1
    C = 2
    D = 3
    E = 4
    F = 5
    G = 6
    C_SHARP = 7


class NoteDuration(Enum):
    HALF = 2
    QUARTER = 4
    EIGHTH = 8


class MusicNoteWaveMagnitude(Enum):
    # fmt: off
    A = [11,25,5,23,8,21,8,19,0,16,5,13,0,11,0,9,5,10,0,12,12,14,0,16,5,17,0,16,0,13,5,10,0,9,0,10,0,12,5,15,7,16,7,15,0,12,12,10,5,9,13,10,8,13,7,16,10,17,5,15,7,13,7,10,10,9,7,10,5,12,0,15,0,16,13,15,0,13,5,10,0,9,5,9,6,10,7,13,0,15,6,16,0,16,6,14,0,11,5,9,15,8,8,9,8,10,11,12,6,14,0,16,8,16,6,15,0,13,12,10,13,9,8,8,7,10,5,12,0,15,0,17,6,20,0,23,0] #
    B = [6,25,0,23,5,21,5,19,7,17,7,15,0,13,0,12,14,10,0,9,0,8,0,7,5,6,5,5,16,5,0,4,5,4,9,4,0,4,9,5,0,5,5,6,8,7,11,8,0,9,7,10,5,12,8,13,10,15,0,16,0,17,7,19,0,20,5,21,0,21,9,22,12,22,11,22,6,22,5,22,0,21,5,20,0,19,0,18,7,17,6,15,12,14,8,13,0,11,9,10,10,9,0,8,0,7,15,6,8,5,7,5,9,4,0,4,5,4,0,4,0,5,0,5,0,6,0,7,5,8,12,9,15,11,0,12,0,14,12,16,0,18,6,21,8,23,6]
    C = [5,25,5,25,5,24,5,23,5,22,5,22,5,21,5,20,5,19,5,18,5,17,5,16,5,15,5,14,5,14,5,13,5,13,5,13,5,13,5,13,5,13,5,13,5,14,5,14,5,14,5,15,5,16,5,16,5,17,5,18,5,18,5,19,5,20,5,20,5,21,5,22,5,22,5,23,5,23,5,24,5,24,5,24,5,25,5,25,5,25,5,25,5,25,5,25,5,25,5,25,5,25,5,25,5,25,5,24,5,24,5,24,5,23,5,23,5,22,5,22,5,21,5,20,5,20,5,19,5,18,5,17,5,16,5,15,5,15,5,14,5,13,5,12,5,11,5,10,5,9,5,8,5,7,5,6,5,6,5,5,5,4,5,4,5,3,5,3,5,2,5,2,5,1,5,1,5,1,5,1,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5]
    D = [10,0,10,2,10,4,10,7,10,10,10,13,10,16,10,19,10,21,10,23,10,24,10,24,10,23,10,21,10,17,10,13,10,9,10,5,10,2,10,0,10,0,10,0,10,0,10,2,10,4,10,6,10,9,10,11,10,14,10,17,10,19,10,21,10,23,10,25,10,25,10,25,10,25,10,25,10,23,10,20,10,16,10,11,10,7,10,4,10,3,10,3,10,5,10,7,10,9,10,11,10,13,10,13,10,13,10,10,10,7,10,6,10,7,10,12,10,18,10,25,10,25,10,25,10,25,10,25,10,25,10,25,10,17,10,3,10,0,10,0,10,0,10,5,10,11,10,16,10,18,10,16,10,11,10,5,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,2,10,5,10,8,10,12,10,15,10,19,10,22,10]
    E = [10,0,10,1,10,2,10,4,10,5,10,7,10,8,10,10,10,11,10,12,10,12,10,12,10,12,10,11,10,11,10,10,10,9,10,8,10,7,10,6,10,5,10,4,10,4,10,4,10,4,10,4,10,5,10,6,10,7,10,9,10,10,10,12,10,13,10,15,10,16,10,17,10,18,10,18,10,18,10,17,10,17,10,16,10,15,10,14,10,13,10,12,10,12,10,11,10,11,10,12,10,12,10,13,10,14,10,15,10,17,10,18,10,19,10,20,10,21,10,22,10,22,10,22,10,22,10,21,10,20,10,20,10,19,10,18,10,18,10,18,10,18,10,18,10,18,10,19,10,19,10,20,10,21,10,22,10,22,10,23,10,24,10,24,10,25,10,25,10]
    F = [0,25,5,25,9,25,9,25,0,25,6,25,6,24,5,24,7,24,0,24,9,23,7,23,0,22,6,22,0,21,7,20,0,19,0,18,0,17,7,16,6,15,10,14,8,12,6,10,5,7,6,2,6,0,0,2,0,7,0,10,5,12,6,14,5,15,0,16,8,17,6,18,0,19,5,20,7,21,14,22,6,22,0,23,9,23,6,24,8,24,7,24,15,24,5,25,0,25,9,25,7,25,6,25,0]
    G = [5,11,5,12,5,12,5,13,5,14,5,14,5,15,5,15,5,16,5,16,5,17,5,17,5,18,5,18,5,18,5,19,5,19,5,19,5,19,5,19,5,19,5,19,5,19,5,19,5,18,5,18,5,17,5,16,5,16,5,15,5,14,5,13,5,13,5,12,5,11,5,10,5,10,5,9,5,9,5,8,5,8,5,8,5,8,5,7,5,7,5,7,5,7,5,7,5,7,5,8,5,8,5,8,5,8,5,8,5,9,5,9,5,9,5,10,5,10,5,11,5,11,5,12,5,12,5,13,5,13,5,14,5,14,5,14,5,15,5,15,5,16,5,16,5,17,5,17,5,18,5,18,5,18,5,19,5,19,5,19,5,19,5,20,5,20,5,20,5,20,5,20,5,20,5,20,5,20,5,20,5,20,5,20,5,20,5,20,5,20,5,20,5,20,5,20,5,19,5,19,5,19,5]
    C_SHARP = [5,19,5,19,5,18,5,17,5,16,5,15,5,14,5,13,5,12,5,10,5,9,5,8,5,7,5,6,5,5,5,4,5,4,5,3,5,3,5,3,5,3,5,4,5,4,5,5,5,6,5,7,5,8,5,9,5,10,5,11,5,12,5,13,5,14,5,15,5,16,5,17,5,18,5,18,5,19,5,19,5,20,5,20,5,20,5,20,5,20,5,20,5,19,5,19,5,18,5,18,5,17,5,16,5,15,5,15,5,14,5,13,5,12,5,11,5,10,5,9,5,8,5,7,5,6,5,6,5,5,5,4,5,4,5,3,5,3,5,2,5,2,5,2,5,2,5,3,5,3,5,4,5,4,5,5,5,6,5,8,5,9,5,10,5,12,5,14,5,15,5,17,5,18,5,19,5,20,5,21,5,22,5,22,5,23,5,23,5,22,5,22,5,21,5,20,5,20,5,19,5,18,5,17,5,15,5,14,5,13,5,13,5,12,5,11,5,10,5,9,5,9,5,8,5,7,5,7,5,7,5,6,5,6,5,6,5,6,5]
    # fmt: on

    @staticmethod
    def get_wave_magnitude(note: MusicNote) -> list[int]:
        return MusicNoteWaveMagnitude[note.name].value


class Octave(Enum):
    LOW = "Low"
    HIGH = "High"


class MusicNotesAudio:
    notes: dict[MusicNote, Sound] = []

    @staticmethod
    def get_note(music_note: MusicNote) -> Sound:
        if not MusicNotesAudio.notes:
            MusicNotesAudio.__save_notes__()

        return cast(Sound, MusicNotesAudio.notes.get(music_note))

    @staticmethod
    def __save_notes__() -> None:

        resources: Resources = ResourceManager.get()
        sound_paths: SoundResources = resources.sounds

        MusicNotesAudio.notes = {
            MusicNote.A: Sound(sound_paths.note_a),
            MusicNote.B: Sound(sound_paths.note_b),
            MusicNote.C: Sound(sound_paths.note_c),
            MusicNote.D: Sound(sound_paths.note_d),
            MusicNote.E: Sound(sound_paths.note_e),
            MusicNote.F: Sound(sound_paths.note_f),
            MusicNote.G: Sound(sound_paths.note_g),
            MusicNote.C_SHARP: Sound(sound_paths.note_c_high),
        }
